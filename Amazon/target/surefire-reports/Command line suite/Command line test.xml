<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-5M7RJ3P" ignored="2" name="Command line test" tests="4" failures="0" timestamp="19 May 2018 14:36:29 GMT" time="0.035" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;useCloudEnv&amp;apos; is required by BeforeMethod on method setUp but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'useCloudEnv' is required by BeforeMethod on method setUp but has not been marked @Optional or defined

... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterClass" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterClass -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod iTestResult" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod iTestResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;useCloudEnv&amp;apos; is required by BeforeMethod on method setUp but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'useCloudEnv' is required by BeforeMethod on method setUp but has not been marked @Optional or defined

... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterClass" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterClass -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod iTestResult" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod iTestResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterClass" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterClass -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod iTestResult" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod iTestResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterClass" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterClass -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod iTestResult" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod iTestResult -->
  <testcase name="amazonFailTestOnPurpose" time="0.0" classname="testAmazonCommonsEmail.TestAmazonTestFail">
    <skipped/>
  </testcase> <!-- amazonFailTestOnPurpose -->
  <testcase name="testDataDrivenSearch" time="0.0" classname="testAmazonDataDriven.TestDataDrivenAmazonSearch">
    <skipped/>
  </testcase> <!-- testDataDrivenSearch -->
  <testcase name="testDataDrivenSearch" time="0.0" classname="testAmazonDataDriven.TestDataDrivenAmazonSearch">
    <skipped/>
  </testcase> <!-- testDataDrivenSearch -->
  <testcase name="testDataDrivenSearch" time="0.0" classname="testAmazonDataDriven.TestDataDrivenAmazonSearch">
    <skipped/>
  </testcase> <!-- testDataDrivenSearch -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="base.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="base.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
</testsuite> <!-- Command line test -->
